=================
RST常用语法汇总
=================
该文档介绍rst的基本语法，rst中存在多种方式可以实现同一个样式的情况，但是请特别注意，为了能够导出与文档模板匹配的pdf文档， \ **请严格按照本文档规定的语法**\ 进行rst编码。
在进行rst文档编码时，可到本文档的rst源码中复制各个语法或命令。

特别注意
===========
| 1、除代码块之外，特殊字符（例如* - _等）请在之前添加转义符'\'！！！
| 2、所有的表格请务必设置表头！！！
| 3、图片务必使用 ``.. figure::`` 命令，否则无法自动为图片生成编号（不要使用image的方式）！！！

设置字体
========
- 从服务器获取（ \\10.8.50.61\cse\7_MISC\文档代码化\Fonts\vscode适用字体（可实现一个汉字宽度等于两个英文，因为rst语法是基于英文开发，所以这里需要安装等宽字体，否则中文编辑表格时报错。））字体文件，配置到/usr/share/fonts/rst中
- VSCode中setting→Text Editor->Font→Font Family中，设置 vscode 字体为'Ubuntu Mono derivative Powerline'

.. figure:: ./_static/VSCode_font.png
  :align: center
  :scale: 100%

  VSCode设置字体示意图

====
标题
====

标题说明
=========
- 一级标题（chapter）：标题文字\ **上下**\ 排列多个#号，#号的长度必须与文字一致。可参考上面“RST文档编写方法与规范”，即一级标题。
- 二级标题（section）：标题文字\ **上下**\ 排列多个=号，=号的长度必须与文字一致。可参考上面“RST文档编写示例”，即二级标题。
- 三级标题（subsection）：标题文字\ **下**\ 排列多个=号，=号的长度必须与文字一致。可参考上面“版本声明”，即三级标题。
- 四级标题（subsubsection）：标题文字\ **上下**\ 排列多个-号，-号的长度必须与文字一致。可参考下面的“注意事项”，即四级标题。

--------
注意事项
--------
在rst中一个汉字相当于两个英文的长度，在制作表格时需要用到与英文等宽字体。

==========
文字的样式
==========

加粗斜体说明
============
- 双星号**包围是加粗，单星号*包围是斜体。
- 若一句话中仅部分文字需要加粗，除了前后加**外，还需要在**前后加入一个转义符和一个空格，可参考标题中的说明。

.. attention:: 上一条非常非常重要，尤其是在表格里的时候。但注意在代码块里无法设置加粗斜体。

加粗斜体示例（rst代码请从rst源文件获取）
========================================

这些是正常的字体

这句话中只有\ **中国**\ 这两个字需要加粗

**This is bold. 这些是加粗的字体。**

*this is italic. 这些是斜体。*

其他技巧
========
- 若文字包含下划线、中划线，请务必在下划线前加转义符'\'，否则导出的pdf会出现不可预测的情况，比如出现红字、连成一条线等。
- 在代码块里请不要添加转义字符，因为代码块会按原样输出。

示例（rst代码请从rst源文件获取）
================================

**错误示例**

执行命令efsmi --q

**正确示例**

执行命令efsmi \-\-q

========
列表语法
========

多级列表
========
- 文字前添加“- ”，注意-后面有一个空格。
- 不同级别之间需要空一行，且下一个级别要和上一个级别缩进一个tab键的距离。

- 一级列表

  - 二级列表1
  - 二级列表2
  - 二级列表3

    - 三级列表1
    - 三级列表2

无序列表
========
无序列表使用 - , * , + 来标记:

- 无序列表第一项
- 无序列表第二项

有序列表
========
有序列表使用 ``num.`` 来标记:

1. 有序列表第一项
2. 有序列表第二项
   
自动编号列表
============
自动编号列表必须使用 ``#.`` 来标记:

#. 自动编号的列表第一项
#. 自动编号的列表第二项

=====
分段
=====

段落之间仅换行
==============
每一行之前添加'|'。

--------------------------------
示例（rst代码请从rst源文件获取）
--------------------------------
| 假如这是第一段内容，第一段内容，第一段内容，第一段内容，第一段内容，第一段内容，第一段内容。
| 这是第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容。

段落之间留白
============
段落之间留一个空行即可。

--------------------------------
示例（rst代码请从rst源文件获取）
--------------------------------
假如这是第一段内容，第一段内容，第一段内容，第一段内容，第一段内容，第一段内容，第一段内容。

这是第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容，第二段内容。

====
表格
====

这里列常用的两个表格，如下:

网格表格
========
网格表格更适用于有合并单元格的情况。另外因为rst语法是基于英文开发，一个中文等于两个英文。所以这里再次提醒需要安装等宽字体，否则中文编辑表格时报错。在vscode的setting→Text Editor->Font→Font Family中加入字体 ``'Ubuntu Mono derivative Powerline'`` 即可。

.. _a link: http://192.168.100.54/data/RSTDoc/vscode%20fonts%20for%20rst/

以上字体设置是为了方便RST表格的对齐。另提供如下excel转rst表格的工具，欢迎使用！
- 请将工具拷贝到自己的机器中
- 将表格内容拷贝进入excel，然后双击ExcelToRST即可
  
.. _a link: http://192.168.100.54/data/RSTDoc/tableConvertTool/

----
说明
----
关于表属性
  - 在'.. table:: '后输入表格名称，注意表格名称前留一个空格。
  - 下一行输入tab键后，设置参数。
  - 参数':widths:'后跟一个空格，然后输入每一列的占比(占比相加必须等于100)，空格隔开。例如两列的话，可以写'30 70'，则代表第一列宽占比30%，第二列宽占比70%。
  - 参数':width:'后跟一个空格，然后输入百分比，一般均为100%。例如'80%'则代表整个表格占页面宽度的80%。

关于绘制
  - 表格起始位置与参数对齐（一般为一个tab）。
  - 用'+'或者'|'来分隔列，'+'用于框线分隔，即行和列的交叉点，'|'用于单元格内容分隔。
  - 用'-'或者'='来分隔行，即填充表格框线。其中'='是用来分隔表头和表体的。
  
    - 使用'='来绘制表头下面的框线。有表头时，导出的pdf才会将这一列按照表头处理，请务必注意（这对于表头背景色、长表格表头重复非常重要）。
    - **请务必设置表头，否则导出的pdf会出现样式问题**

  - 同一列每一个单元格的宽度必须完全相同，只差一个空格也无法正常显示或导出，请务必注意一个汉字相当于两个英文宽度。

    - 强烈建议安装'Ubuntu Mono derivative Powerline'字体，对绘制表格非常友好。
    - 若未正常显示，请首先检查是否有未对齐的地方。

  - 若有合并的单元格，根据实际需要，参考下方示例“横向合并单元格”“纵向合并单元格1”“纵向合并单元格2”。
  - 若有文字需要加粗或斜体，除了前后加*外，还需要在*前后加入'\ '（一个转义符，一个空格），可参考下表中的“加粗怎么办”“斜体怎么办”。
 
-----
示例
-----

.. table:: 表格示例1
  :widths: 15 15 70
  :width: 100%

  +--------+-----------+---------------------------------------------+
  | 大分类 | 小分类    | 定义                                        |
  +========+===========+=============================================+
  | 横向合并单元格     | i10                                         |
  +--------+-----------+---------------------------------------------+
  | 加速卡 | 训练      | EFB-0001800-00                              |
  +--------+-----------+---------------------------------------------+

.. table:: 表格示例2
  :widths: 30 70
  :width: 100%

  +--------------------+---------------------------------------------+
  | 术语               | 定义                                        |
  +====================+=============================================+
  | Product SKU        | i10                                         |
  +--------------------+---------------------------------------------+
  | P/N                | EFB-0001800-00                              |
  +--------------------+---------------------------------------------+
  | MPN                | FM-0001800-00                               |
  +--------------------+---------------------------------------------+
  |                    | 想要分行显示不画线的第一行                  |
  +                    +                                             +
  | 纵向合并单元格1    | 想要分行显示不画线的第二行                  | 
  +                    +                                             +
  |                    | 想要分行显示不画线的第三行                  |
  +                    +                                             +
  |                    | 想要分行显示不画线的第四行                  |
  +--------------------+---------------------------------------------+
  |                    | 想要分行显示画线的第一行                    |
  +                    +---------------------------------------------+
  | 纵向合并单元格2    | 想要分行显示画线的第二行                    | 
  +                    +---------------------------------------------+
  |                    | 想要分行显示画线的第三行                    |
  +                    +---------------------------------------------+
  |                    | 想要分行显示画线的第四行                    |
  +--------------------+---------------------------------------------+
  |                    | 不分行显示的第一行，空格连接                |
  | 内容较长分行编辑   | 不分行显示的第二行，空格连接                | 
  |                    | 不分行显示的第三行，空格连接                |
  |                    | 不分行显示的第四行，空格连接                |
  +--------------------+---------------------------------------------+
  | 计算精度支持       | FP32 FP16 BF16 INT8等                       |
  +--------------------+---------------------------------------------+
  | 加粗怎么办         | 想要把\ **中国**\ 两个字加粗                |
  +--------------------+---------------------------------------------+
  | 有下划线怎么办     | 带下划线\_一定要加转义符                    |
  +--------------------+---------------------------------------------+


.. table:: 表格示例3
    :widths: 15 15 70
    :width: 100%

    +--------------------------+---------------------------------------------------------------------------+
    | 术语                     | 描述                                                                      |
    +==========================+===========================================================================+
    | TopsRider                | 燧原科技驭算软件栈                                                        |
    +--------------------------+---------------------------------------------------------------------------+
    | GCU                      | General Compute Unit, 燧原科技通用计算单元                                |
    +--------------------------+---------------------------------------------------------------------------+

简单表格
=========

简单表格更适用于无合并单元格的情况。

----
说明
----

关于表属性
  - 同第一种表格

关于绘制
  - 表格起始位置与参数对齐（一般为一个tab）。
  - 用空格' '来分隔列。
  - 用'='来分隔表头和表体。
  - **请务必设置表头，否则导出的pdf会出现样式问题**
  - 表体内，只需要回车来分隔行。

  - 同第一种表格一样，同一列每一个单元格的宽度必须完全相同，只差一个空格也无法正常显示或导出，请务必注意一个汉字相当于两个英文宽度。
  
    - 强烈建议安装'Ubuntu Mono derivative Powerline'字体，对绘制表格非常友好。
    - 若未正常显示，请首先检查是否有未对齐的地方。

  - 此类表格不适用有合并单元格的情况。

.. table:: 表格示例
  :align: center
  :widths: 25 25 50
  :width: 100%

  ==============  ===============  ==========================================================
  文档版本        文档日期         文档说明                                        
  ==============  ===============  ==========================================================
  V1.0            2020/11/5        初版
  V0.15           2021/3/25        修正一些描述错误，如更改I10为i10 
  ==============  ===============  ==========================================================

====
图片
====

仅一张图片的情况
================

----
说明
----
关于表属性
  - 在'.. figure::'后输入一个空格，然后输入图片路径。
  - 下一行输入tab键后，设置参数。
  - 参数':align:'后跟一个空格，然后输入对齐方式，请设置为center，即居中显示。
  - 参数':scale:'后跟一个空格，然后输入百分比，可根据页面实际情况来调整大小。
  - 还可以通过 ':width:' ':height:'指定图片大小，单位可以是px或in，建议宽度在700px左右即可，按原图实际尺寸压缩大小。

--------------------------------
示例（rst代码请从rst源文件获取）
--------------------------------

.. figure:: ./_static/image0.png
  :align: center
  :width: 726px
  :height: 333.5px

  软件包安装示意图

图片并排展示的情况
==================

请将多张图片拼接为一张图片再插入rst

======
代码块
======

说明
====
- '.. code-block::'后跟一空格，后输入代码块类别
- 支持的类别有：python、shell、json等
- 空一行后输入代码，注意代码前要留有一个tab的距离

--------------------------------------
Python示例（rst代码请从rst源文件获取）
--------------------------------------

.. code-block:: python

  import collections
  import csv
  import os
  import json
  import modeling
  import optimization
  import tokenization
  import tensorflow as tf
  try:
      import horovod.tensorflow as hvd
  except Exception as ex:
      pass
  import tops_models.tf_utils as tf_utils
  import tops_models.common_utils as common_utils
  import tops_models.estimator_utils as estimator_utils
  from tops_models.logger import tops_logger

  logger = tops_logger()
  flags = tf.flags
  FLAGS = flags.FLAGS

  ## Required parameters
  flags.DEFINE_string(
      "data_dir", None,
      "The input data dir. Should contain the .tsv files (or other data files) "
      "for the task.")
        
---------
Shell示例
---------

.. code-block:: shell

  apt install curl
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(cat /etc/os-release | grep UBUNTU_CODENAME | cut -d '=' -f 2) stable"
  apt update
  apt install docker-ce -y
  systemctl restart docker
  docker --version

=============
注意事项&注释
=============

注意事项说明
============
'.. attention::'后跟一个空格，然后输入说明文字。

示例
====
.. attention:: 这是一个说明示例，注意文字前面有一个空格哦！html页面上会显示表格的形式，中文的话是“注意”

注释说明
========
- 在标注的文字后面设置
  
 .. code-block::
   
   \ [#]_\

- 在下方空白处'.. [#] '后面跟具体的注释文字。
- 注释文字将出现在标记注释页面的最下方。
- #会自动编号，也可以直接指定数字，建议自动编号。

示例
====
reStructureTex是默认纯文本标记语言\ [#]_\ 。Docutil提供了基本的reStructureTex语法，而Sphinx扩展了它以支持其他功能。

.. [#] 标记语言，是一种将文本以及文本相关的其他信息结合起来，展现出关于文档结构和数据处理细节的电脑文字编码。

title_sample_label
==================

该标题只是为了标题链接示例，请继续往下读。

====
链接
====

.. _url_label:

URL链接说明
===========
\`\`之间先后输入链接名称、空格、由<>包裹的链接地址，**最后跟一下划线**

URL链接示例
===========

.. code-block::

  `燧原科技官网 <https://www.enflame-tech.com/>`_

效果如下：

`燧原科技官网 <https://www.enflame-tech.com/>`_

标题链接说明
============
\`\`之间先后输入标题名称，**最后跟一下划线**

标题链接示例
============

.. code-block::
  
  `URL链接说明`_

效果如下：

`URL链接说明`_

引用链接说明
============

- 在被引用地址处设置label： '.. _labelname:'，其中_labelname为label名称。
- 在引用地址处设置： ':ref:'后面跟'`显示名称<labelname>`'

引用链接示例
============

URL链接说明参见  :ref:`URL LINK<url_label>` （该label设置在URL本章节“URL链接说明”之前）

==========
提示警告类
==========

有很多: tip, note, hint, danger, error, warning, caution, attention , important
reST 标记代码:

.. tip:: This is a tip

.. note:: This is a note

.. hint:: This is a hint

.. danger:: This is a danger

.. error:: This is an error

.. warning:: This is a warning

.. caution:: This is a caution

.. attention:: This is an attention

.. important:: This is an important

.. seealso:: This is seealso

========
参考资料
========

学习资料
========
请参照：
- https://iridescent.ink/HowToMakeDocs/Basic/reST.html#figure-datangfurongyuan
- http://192.168.100.54/data/RSTDoc/

常见问题
========
请参照：
- http://wiki.enflame.cn/pages/viewpage.action?pageId=70321488
- http://wiki.enflame.cn/pages/viewpage.action?pageId=139726193



